{"version":3,"sources":["components/Form/Form.module.css","components/Contact/Contact.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","components/Form/Form.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","Form","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","ev","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","resFilter","this","className","css","form","form_label","htmlFor","id","form_input","type","pattern","title","required","onChange","form_submit","Component","Contact","completed","onDeleteContact","onToggleCompleted","contact_checkbox","checked","contact_name","contact_number","del_btn","onClick","ContactList","contacts","contact_list","map","contact_item_send","contact_item_bgc","contact_item","Filter","filter_label","filter_input","App","initContacts","filter","randomId","formSubmitHandle","contact","find","alert","getVisibleContacts","normalizedFilter","toLowerCase","console","log","includes","changeFilter","deleteContact","contactId","toggleCompleted","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","nextConacts","setItem","stringify","visibleContacts","title_phonebook","title_contacts","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77a9e17f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TU32\",\"form_label\":\"Form_form_label__2xhbC\",\"form_input\":\"Form_form_input__3M2on\",\"form_submit\":\"Form_form_submit__Mz2VV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"del_btn\":\"Contact_del_btn__37H0c\",\"contact_checkbox\":\"Contact_contact_checkbox__2VwHW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__3h9PC\",\"contact_item\":\"ContactList_contact_item__QlAku\",\"contact_item_bgc\":\"ContactList_contact_item_bgc__3Q9JO\",\"contact_item_send\":\"ContactList_contact_item_send__gFcN2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__1MBDF\",\"filter_input\":\"Filter_filter_input__ADyBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title_phonebook\":\"App_title_phonebook__1SR0w\",\"title_contacts\":\"App_title_contacts___AuLb\"};","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport css from \"./Form.module.css\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleChange = (ev) => {\n    const { name, value } = ev.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (ev) => {\n    ev.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n    this.props.resFilter();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={css.form} onSubmit={this.handleSubmit}>\n        <label className={css.form_label} htmlFor={this.nameInputId}>\n          Name\n          <input\n            id={this.nameInputId}\n            className={css.form_input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            value={name}\n          />\n        </label>\n\n        <label className={css.form_label} htmlFor={this.numberInputId}>\n          Number\n          <input\n            id={this.numberInputId}\n            className={css.form_input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n            value={number}\n          />\n        </label>\n        <button className={css.form_submit} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\r\nimport css from \"./Contact.module.css\";\r\n\r\nconst Contact = ({ completed, name, number, onDeleteContact, onToggleCompleted}) => {\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"checkbox\"\r\n                className={css.contact_checkbox}\r\n                checked={completed}\r\n                onChange={onToggleCompleted}\r\n            />\r\n            <span className={css.contact_name}>{name}</span>\r\n            <span className={css.contact_number}>{number}</span>\r\n            \r\n            <button\r\n                className={css.del_btn}\r\n                type=\"button\"\r\n                onClick={onDeleteContact}\r\n            >\r\n                Delete\r\n            </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;","import React from \"react\";\n\nimport Contact from \"../Contact/Contact\";\nimport css from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact, onToggleCompleted }) => {\n  return (\n    <ul className={css.contact_list}>\n      {contacts.map(({ id, name, number, completed }) => (\n        <li key={id} className={`${completed ? css.contact_item_send : css.contact_item_bgc} ${css.contact_item}`}>\n          <Contact\n            completed={completed}\n            name={name}\n            number={number}\n            onDeleteContact={() => onDeleteContact(id)}\n            onToggleCompleted={() => onToggleCompleted(id)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport css from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={css.filter_label}>\n    Find contacts by name\n    <input\n      className={css.filter_input}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport Form from \"./components/Form/Form\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport initContacts from \"./initContacts.json\";\nimport css from \"./App.module.css\";\n\nclass App extends Component {\n  static defaultProps = {\n    initContacts: [],\n  };\n\n  state = {\n    contacts: initContacts,\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextConacts = this.state.contacts;\n    const prevConacts = prevState.contacts;\n\n    if (nextConacts !== prevConacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextConacts));\n    }\n  }\n\n  randomId = () => uuidv4();\n\n  formSubmitHandle = ({ name, number }) => {\n    const contact = {\n      id: this.randomId(),\n      name,\n      number,\n      completed: false,\n    };\n\n    this.setState(({ contacts }) => {\n      const found = contacts.find((contact) => contact.name === name);\n      if (!found) {\n        return { contacts: [contact, ...contacts] };\n      }\n      alert(`${name} is already in contacts`);\n    });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\nconsole.log(contacts);\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  changeFilter = (ev) => {\n    this.setState({\n      filter: ev.currentTarget.value,\n    });\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== contactId),\n    }));\n  };\n\n  toggleCompleted = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.map(contact => \n        contact.id === contactId ? { ...contact, completed: !contact.completed } : contact\n      \n      ),\n    }));\n  };\n\n  resFilter = () => {\n    this.setState({ filter: \"\"});\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div>\n        <h2 className={css.title_phonebook}>Phonebook</h2>\n        <Form onSubmit={this.formSubmitHandle} resFilter={this.resFilter}/>\n        <h2 className={css.title_contacts}>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n          onToggleCompleted={this.toggleCompleted}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}